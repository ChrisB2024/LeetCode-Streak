from heapq import heapify, heappop, heappush

class Solution(object):
    def maxAverageRatio(self, classes, extraStudents):
        """
        :type classes: List[List[int]]
        :type extraStudents: int
        :rtype: float
        """
        def gain(p,t):
            return (p+1.0)/(t+1.0)-(p*1.0)/t

        heap = [(-gain(p,t),p,t) for p, t in classes]
        heapify(heap)

        for _ in range(extraStudents):
            _, p, t = heappop(heap)
            p += 1
            t += 1
            heappush(heap, (-gain(p, t), p, t))

        total = 0.0
        for _, p, t in heap:
            total += (p * 1.0) / t
        return total / len(heap)
